{
  "source": "doc/api/punycode.markdown",
  "modules": [
    {
      "textRaw": "punycode",
      "name": "punycode",
      "stability": 2,
      "stabilityText": "Unstable",
      "desc": "<!--\n[Punycode.js](http://mths.be/punycode) is bundled with Node.js v0.6.2+. Use\n`require('punycode')` to access it. (To use it with other Node.js versions,\nuse npm to install the `punycode` module first.)\n-->\n\n<p><a href="\"http://mths.be/punycode\"">Punycode.js</a> は Node.js v0.6.2 以降に\nバンドルされています。\nアクセスするには <code>require(&#39;punycode&#39;)</code> を使用します\n(他のバージョンの Node.js でこれを使用するには、先に npm を使用して <code>punycode</code>\nモジュールをインストールしてください)。\n\n</p>\n",
      "methods": [
        {
          "textRaw": "punycode.decode(string)",
          "type": "method",
          "name": "decode",
          "desc": "<!--\nConverts a Punycode string of ASCII code points to a string of Unicode code\npoints.\n-->\n\n<p>ASCII コードポイントによる Punycode 文字列を Unicode コードポイントに\n変換します。\n\n</p>\n<pre><code>// decode domain name parts\npunycode.decode(&#39;maana-pta&#39;); // &#39;mañana&#39;\npunycode.decode(&#39;--dqo34k&#39;); // &#39;☃-⌘&#39;</code></pre>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "string"
                }
              ]
            }
          ]
        },
        {
          "textRaw": "punycode.encode(string)",
          "type": "method",
          "name": "encode",
          "desc": "<!--\nConverts a string of Unicode code points to a Punycode string of ASCII code\npoints.\n-->\n\n<p>Unicode コードポイントを ASCII コードポイントによる Punycode 文字列に\n変換します。\n\n</p>\n<pre><code>// encode domain name parts\npunycode.encode(&#39;mañana&#39;); // &#39;maana-pta&#39;\npunycode.encode(&#39;☃-⌘&#39;); // &#39;--dqo34k&#39;</code></pre>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "string"
                }
              ]
            }
          ]
        },
        {
          "textRaw": "punycode.toUnicode(domain)",
          "type": "method",
          "name": "toUnicode",
          "desc": "<!--\nConverts a Punycode string representing a domain name to Unicode. Only the\nPunycoded parts of the domain name will be converted, i.e. it doesn't matter if\nyou call it on a string that has already been converted to Unicode.\n-->\n\n<p>Punycode 文字列で表現されたドメイン名を Unicode に変換します。\nドメイン名の中の Punycode 化された文字列だけが変換されます。\nそのため、すでに Unicode に変換された文字列でも気にせずに渡すことができます。\n\n</p>\n<pre><code>// decode domain names\npunycode.toUnicode(&#39;xn--maana-pta.com&#39;); // &#39;mañana.com&#39;\npunycode.toUnicode(&#39;xn----dqo34k.com&#39;); // &#39;☃-⌘.com&#39;</code></pre>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "domain"
                }
              ]
            }
          ]
        },
        {
          "textRaw": "punycode.toASCII(domain)",
          "type": "method",
          "name": "toASCII",
          "desc": "<!--\nConverts a Unicode string representing a domain name to Punycode. Only the\nnon-ASCII parts of the domain name will be converted, i.e. it doesn't matter if\nyou call it with a domain that's already in ASCII.\n-->\n\n<p>Unicode 文字列で表現されたドメイン名を Punycode に変換します。\nドメイン名の中の非 ASCII 文字だけが変換されます。\nすなわち、すでに ASCII 化されたドメインでも気にせずに渡すことができます。\n\n</p>\n<pre><code>// encode domain names\npunycode.toASCII(&#39;mañana.com&#39;); // &#39;xn--maana-pta.com&#39;\npunycode.toASCII(&#39;☃-⌘.com&#39;); // &#39;xn----dqo34k.com&#39;</code></pre>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "domain"
                }
              ]
            }
          ]
        }
      ],
      "properties": [
        {
          "textRaw": "punycode.ucs2",
          "name": "ucs2",
          "modules": [
            {
              "textRaw": "punycode.ucs2.decode(string)",
              "name": "punycode.ucs2.decode(string)",
              "desc": "<!--\nCreates an array containing the decimal code points of each Unicode character\nin the string. While [JavaScript uses UCS-2\ninternally](http://mathiasbynens.be/notes/javascript-encoding), this function\nwill convert a pair of surrogate halves (each of which UCS-2 exposes as\nseparate characters) into a single code point, matching UTF-16.\n-->\n\n<p>文字列中の Unicode 文字のコードポイントに対応する数値を含む配列を作成します。\n<a href="\"http://mathiasbynens.be/notes/javascript-encoding\"">JavaScript uses UCS-2 internally</a>\nのように、この関数はサロゲートペア (それぞれは UCS-2 の独立した文字) を\nUTF-16 にマッチする一つのコードポイントに変換します。\n\n</p>\n<pre><code>punycode.ucs2.decode(&#39;abc&#39;); // [97, 98, 99]\n// surrogate pair for U+1D306 tetragram for centre:\npunycode.ucs2.decode(&#39;\\uD834\\uDF06&#39;); // [0x1D306]</code></pre>\n",
              "type": "module",
              "displayName": "punycode.ucs2.decode(string)"
            },
            {
              "textRaw": "punycode.ucs2.encode(codePoints)",
              "name": "punycode.ucs2.encode(codepoints)",
              "desc": "<!--\nCreates a string based on an array of decimal code points.\n-->\n\n<p>コードポイントの数値を含む配列を元に文字列を作成します。\n\n</p>\n<pre><code>punycode.ucs2.encode([97, 98, 99]); // &#39;abc&#39;\npunycode.ucs2.encode([0x1D306]); // &#39;\\uD834\\uDF06&#39;</code></pre>\n",
              "type": "module",
              "displayName": "punycode.ucs2.encode(codePoints)"
            }
          ]
        },
        {
          "textRaw": "punycode.version",
          "name": "version",
          "desc": "<!--\nA string representing the current Punycode.js version number.\n-->\n\n<p>現在の Punycode.js のバージョン番号を表す文字列です。\n</p>\n"
        }
      ],
      "type": "module",
      "displayName": "punycode"
    }
  ]
}
